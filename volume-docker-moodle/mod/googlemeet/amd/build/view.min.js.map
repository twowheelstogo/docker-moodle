{"version":3,"sources":["../src/view.js"],"names":["define","Ajax","Str","Notification","Templates","gapi","init","clientId","apiKey","googlemeet","hasRecording","courseModuleId","hasCapability","discoveryDocs","meetingCode","url","substr","ownerEmail","notpossiblesync","notfoundrecordingsfolder","notfoundrecordingname","stror","get_strings","key","component","done","strs","fail","exception","syncDriveButton","document","getElementById","handleSyncDrive","auth2","getAuthInstance","signIn","prompt","then","getMeetFolder","catch","showLoading","show","googlemeetSyncImg","style","display","disabled","appendPre","message","pre","textContent","createTextNode","appendChild","hidePre","innerHTML","setPermission","fileId","client","drive","permissions","create","resource","fields","getNameQuery","query","originalname","getTimeString","s","secNum","Math","floor","parseInt","hours","minutes","seconds","renderTemplate","recordings","render","coursemoduleid","hascapability","html","js","replaceNodeContents","Date","toLocaleString","getFiles","parents","files","list","response","result","length","i","file","permissionIds","includes","id","recordingId","duration","videoMediaMetadata","durationMillis","createdTime","getTime","call","methodname","args","googlemeetid","creatoremail","notfoundmsg","error","JSON","stringify","isOwnerAndRoomCreator","owners","me","emailAddress","load","scope","onclick"],"mappings":"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","sourcesContent":["define([\n  'core/ajax',\n  'core/str',\n  'core/notification',\n  'core/templates',\n  'mod_googlemeet/gapi'\n], function(Ajax, Str, Notification, Templates, gapi) {\n  return {\n    init: function(\n      clientId,\n      apiKey,\n      googlemeet,\n      hasRecording,\n      courseModuleId,\n      hasCapability\n    ) {\n\n      // Array of API discovery doc URLs for APIs used by the quickstart\n      var discoveryDocs = [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"];\n\n      // Authorization scopes required by the API\n      var scope = 'https://www.googleapis.com/auth/drive';\n\n      // Meeting code\n      var meetingCode = googlemeet.url.substr(24, 12);\n\n      // Google Drive Meet Recordings folder owner email.\n      var ownerEmail;\n\n      // // Load strings\n      var notpossiblesync = '';\n      var notfoundrecordingsfolder = '';\n      var notfoundrecordingname = '';\n      var stror = '';\n      Str.get_strings([\n        {key: 'notpossiblesync', component: 'mod_googlemeet'},\n        {key: 'notfoundrecordingsfolder', component: 'mod_googlemeet'},\n        {key: 'notfoundrecordingname', component: 'mod_googlemeet'},\n        {key: 'or', component: 'mod_googlemeet'},\n      ]).done(function(strs) {\n        notpossiblesync = strs[0];\n        notfoundrecordingsfolder = strs[1];\n        notfoundrecordingname = strs[2];\n        stror = strs[3];\n      }).fail(Notification.exception);\n\n      // Elements references\n      var syncDriveButton = document.getElementById('id_syncdrivebutton');\n\n      /**\n       *  Initializes the API client library and sets up sign-in state\n       *  listeners.\n       */\n      function initClient() {\n        gapi.client.init({\n          apiKey: apiKey,\n          clientId: clientId,\n          discoveryDocs: discoveryDocs,\n          scope: scope\n        }).then(function() {\n          syncDriveButton.onclick = handleSyncDrive;\n          syncDriveButton.disabled = false;\n          return;\n        }).catch(function(error) {\n          syncDriveButton.disabled = true;\n          appendPre(JSON.stringify(error, null, 2));\n        });\n      }\n\n      /**\n       * Initiates sync with Google Drive\n       */\n      function handleSyncDrive() {\n        gapi.auth2.getAuthInstance().signIn({prompt: 'select_account'}).then(function() {\n          getMeetFolder();\n          return;\n        }).catch();\n      }\n\n      /**\n       * Shows a loading on the screen\n       * @param {boolean} show\n       */\n      function showLoading(show) {\n        var googlemeetSyncImg = document.getElementById('googlemeet_syncimg');\n\n        if (show) {\n          googlemeetSyncImg.style.display = \"flex\";\n          syncDriveButton.disabled = true;\n        } else {\n          googlemeetSyncImg.style.display = \"none\";\n          syncDriveButton.disabled = false;\n        }\n      }\n\n      /**\n       * Append a pre-element to the body that contains the message\n       * provided as its text node. Used to display API call errors.\n       *\n       * @param {string} message Text to be placed in pre element.\n       */\n      function appendPre(message) {\n        var pre = document.getElementById('googlemeetcontentlog');\n        var textContent = document.createTextNode(message + '\\n');\n        pre.style.display = \"block\";\n        pre.appendChild(textContent);\n      }\n\n      /**\n       * Hide the pre tag\n       */\n      function hidePre() {\n        var pre = document.getElementById('googlemeetcontentlog');\n        pre.style.display = \"none\";\n        pre.innerHTML = \"\";\n      }\n\n      /**\n       * Generates the shareable link to anyone with the link\n       * @param {string} fileId Google Drive recording ID\n       */\n      function setPermission(fileId) {\n        gapi.client.drive.permissions.create({\n          resource: {\n            'type': 'anyone',\n            'role': 'reader'\n          },\n          fileId: fileId,\n          fields: 'id',\n        }).then().catch();\n      }\n\n      /**\n       * Build the query to search for the recording name in Google Drive.\n       *\n       * @returns {string}\n       */\n      function getNameQuery() {\n        var query = \"and (name contains '\" + meetingCode + \"'\";\n        query += \" or name contains '\" + googlemeet.originalname + \"')\";\n\n        return query;\n      }\n\n      /**\n       * Receive recording time duration in milliseconds and format to string.\n       *\n       * @param {string} s The time in milliseconds.\n       * @returns {string} Formatted time. Example 1:01:20\n       */\n      function getTimeString(s) {\n        var secNum = Math.floor(parseInt(s, 10) / 1000);\n        var hours = Math.floor(secNum / 3600);\n        var minutes = Math.floor((secNum - (hours * 3600)) / 60);\n        var seconds = secNum - (hours * 3600) - (minutes * 60);\n\n        if (seconds < 10) {\n          seconds = \"0\" + seconds;\n        }\n\n        if (hours > 0) {\n          if (minutes < 10) {\n            minutes = \"0\" + minutes;\n          }\n          return hours + ':' + minutes + ':' + seconds;\n        } else {\n          return minutes + ':' + seconds;\n        }\n      }\n\n      /**\n       * Render the recording table with the recordings coming from Google Drive.\n       * @param {array} recordings\n       */\n      function renderTemplate(recordings) {\n        Templates.render('mod_googlemeet/recordingstable', {\n          recordings: recordings,\n          coursemoduleid: courseModuleId,\n          hascapability: hasCapability\n        }).then(function(html, js) {\n          showLoading(false);\n\n          Templates.replaceNodeContents('#googlemeet_recordings_table', html, js);\n\n          document.getElementById('id_creatoremail').innerHTML = ownerEmail;\n          document.getElementById('id_lastsync').innerHTML = new Date().toLocaleString().substr(0, 16);\n          return;\n        }).fail(Notification.exception).fail(function() {\n          showLoading(false);\n        });\n      }\n\n      /**\n       * Get recordings from Google Drive\n       * @param {string} parents 'Meet Recordings' folder(s) ID(s)\n       */\n      function getFiles(parents) {\n        gapi.client.drive.files.list({\n          'q': \"(\" + parents + \")\" +\n            \" and trashed=false and mimeType='video/mp4' \" + getNameQuery(),\n          'pageSize': 1000,\n          'fields': \"files(id,name,permissionIds,createdTime,videoMediaMetadata,webViewLink)\"\n        }).then(function(response) {\n          var files = response.result.files;\n          if (files && files.length > 0) {\n            for (var i = 0; i < files.length; i++) {\n              var file = files[i];\n              if (!file.permissionIds.includes('anyoneWithLink')) {\n                setPermission(file.id);\n              }\n\n              files[i].recordingId = file.id;\n              files[i].duration = getTimeString(file.videoMediaMetadata.durationMillis);\n              files[i].createdTime = Math.floor(new Date(file.createdTime).getTime() / 1000);\n\n              delete (files[i].id);\n              delete (files[i].permissionIds);\n              delete (files[i].videoMediaMetadata);\n            }\n\n            Ajax.call([{\n              methodname: 'mod_googlemeet_sync_recordings',\n              args: {\n                googlemeetid: googlemeet.id,\n                creatoremail: ownerEmail,\n                files: files,\n                coursemoduleid: courseModuleId\n              }\n            }])[0].then(function(response) {\n              renderTemplate(response);\n              hasRecording = true;\n              return;\n            }).fail(Notification.exception).fail(function() {\n              showLoading(false);\n            });\n\n          } else {\n            var notfoundmsg = notfoundrecordingname + ' \"' + meetingCode + '\" ';\n            if (googlemeet.originalname) {\n              notfoundmsg += stror + ' \"' + googlemeet.originalname + '\"';\n            }\n            appendPre(notfoundmsg);\n            showLoading(false);\n\n            if (hasRecording) {\n              showLoading(true);\n              Ajax.call([{\n                methodname: 'mod_googlemeet_delete_all_recordings',\n                args: {\n                  googlemeetid: googlemeet.id,\n                  coursemoduleid: courseModuleId\n                }\n              }])[0].then(function(response) {\n                renderTemplate(response);\n                hasRecording = false;\n                showLoading(false);\n                return;\n              }).fail(Notification.exception).fail(function() {\n                showLoading(false);\n              });\n            }\n          }\n          return;\n        }).catch(function(error) {\n          showLoading(false);\n          appendPre(JSON.stringify(error.result.error, null, 2));\n        });\n      }\n\n      /**\n       * Checks if the owner of the folder is the same who created the room.\n       *\n       * @param {string} creatoremail Room creator email.\n       * @param {array} owners Folder owners list.\n       * @returns {boolean}\n       */\n      function isOwnerAndRoomCreator(creatoremail, owners) {\n        for (let i = 0; i < owners.length; i++) {\n          if (owners[i].me === true) {\n            return creatoremail === owners[i].emailAddress;\n          }\n        }\n        return false;\n      }\n\n      /**\n       * Get 'Meet Recordings' folder from Google Drive\n       */\n      function getMeetFolder() {\n        showLoading(true);\n        hidePre();\n        gapi.client.drive.files.list({\n          'q': \"name='Meet Recordings' and trashed=false\",\n          'pageSize': 1000,\n          'fields': \"nextPageToken, files(id,owners)\"\n        }).then(function(response) {\n          var files = response.result.files;\n\n          if (files && files.length > 0) {\n            var parents = '';\n\n            for (let i = 0; i < files.length; i++) {\n              if (isOwnerAndRoomCreator(googlemeet.creatoremail, files[i].owners)) {\n                ownerEmail = googlemeet.creatoremail;\n                parents += `parents='${files[i].id}'`;\n                if (i + 1 < files.length) {\n                  parents += ' or ';\n                }\n              }\n\n            }\n\n            if (parents) {\n              getFiles(parents);\n              return;\n            }\n\n            appendPre(notpossiblesync);\n            showLoading(false);\n          } else {\n            appendPre(notfoundrecordingsfolder);\n            showLoading(false);\n          }\n          return;\n        }).catch(function(error) {\n          showLoading(false);\n          appendPre(JSON.stringify(error.result.error, null, 2));\n        });\n      }\n\n      /**\n       *  On load, called to load the auth2 library and API client library.\n       */\n      gapi.load('client:auth2', initClient);\n    }\n  };\n});\n"],"file":"view.min.js"}